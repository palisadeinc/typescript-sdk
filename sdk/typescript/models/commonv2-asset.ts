/* tslint:disable */
/* eslint-disable */
/**
 * Palisade API
 * The Palisade API enables programmatic interaction with the various features of the Palisade platform
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { ProtobufAny } from './protobuf-any';
// May contain unused imports in some cases
// @ts-ignore
import type { V2AssetSource } from './v2-asset-source';
// May contain unused imports in some cases
// @ts-ignore
import type { V2Blockchain } from './v2-blockchain';
// May contain unused imports in some cases
// @ts-ignore
import type { V2Standard } from './v2-standard';

/**
 * Asset is any blockchain asset e.g. USDC, XRP etc.
 * @export
 * @interface Commonv2Asset
 */
export interface Commonv2Asset {
    /**
     * ID is unique across all blockchains and created by combining the blockchain ID, contract address, and symbol
     * @type {string}
     * @memberof Commonv2Asset
     */
    'id': string;
    /**
     * 
     * @type {V2Standard}
     * @memberof Commonv2Asset
     */
    'standard': V2Standard;
    /**
     * The currency symbol of the asset
     * @type {string}
     * @memberof Commonv2Asset
     */
    'symbol': string;
    /**
     * The human readable name of the asset
     * @type {string}
     * @memberof Commonv2Asset
     */
    'name'?: string;
    /**
     * 
     * @type {V2Blockchain}
     * @memberof Commonv2Asset
     */
    'blockchain': V2Blockchain;
    /**
     * Count of decimal places for the asset
     * @type {number}
     * @memberof Commonv2Asset
     */
    'decimals'?: number;
    /**
     * Whether the asset is vetted on the regulated platform
     * @type {boolean}
     * @memberof Commonv2Asset
     */
    'vetted'?: boolean;
    /**
     * Whether the asset is currently enabled on the platform
     * @type {boolean}
     * @memberof Commonv2Asset
     */
    'enabled'?: boolean;
    /**
     * The token contract address. This field will be empty if the asset is the native coin of the blockchain
     * @type {string}
     * @memberof Commonv2Asset
     */
    'contract'?: string;
    /**
     * The date and time the asset was created
     * @type {string}
     * @memberof Commonv2Asset
     */
    'createdAt': string;
    /**
     * The date and time the asset was last updated
     * @type {string}
     * @memberof Commonv2Asset
     */
    'updatedAt'?: string;
    /**
     * Organization ID for custom assets
     * @type {string}
     * @memberof Commonv2Asset
     */
    'organizationId'?: string;
    /**
     * CoinGecko identifier for price data (optional for testnet assets)
     * @type {string}
     * @memberof Commonv2Asset
     */
    'coingeckoId'?: string;
    /**
     * 
     * @type {V2AssetSource}
     * @memberof Commonv2Asset
     */
    'source'?: V2AssetSource;
    /**
     * 
     * @type {ProtobufAny}
     * @memberof Commonv2Asset
     */
    'sourceMetadata'?: ProtobufAny;
    /**
     * When this asset was last synchronized
     * @type {string}
     * @memberof Commonv2Asset
     */
    'lastSyncedAt'?: string;
    /**
     * Version counter for sync updates
     * @type {number}
     * @memberof Commonv2Asset
     */
    'syncVersion'?: number;
    /**
     * Checksummed version of the contract address
     * @type {string}
     * @memberof Commonv2Asset
     */
    'contractAddressChecksummed'?: string;
}



