/* tslint:disable */
/* eslint-disable */
/**
 * Palisade API
 * The Palisade API enables programmatic interaction with the various features of the Palisade platform
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { V2XRPTransactionConfig } from './v2-xrptransaction-config';

/**
 * 
 * @export
 * @interface TransactionsServiceTransferTransactionRequest
 */
export interface TransactionsServiceTransferTransactionRequest {
    /**
     * The destination address
     * @type {string}
     * @memberof TransactionsServiceTransferTransactionRequest
     */
    'destinationAddress': string;
    /**
     * The contract/issuing address
     * @type {string}
     * @memberof TransactionsServiceTransferTransactionRequest
     */
    'contract'?: string;
    /**
     * The asset symbol
     * @type {string}
     * @memberof TransactionsServiceTransferTransactionRequest
     */
    'symbol': string;
    /**
     * The quantity of the asset to transfer
     * @type {string}
     * @memberof TransactionsServiceTransferTransactionRequest
     */
    'qty': string;
    /**
     * The blockchain nonce/sequence to use
     * @type {string}
     * @memberof TransactionsServiceTransferTransactionRequest
     */
    'sequence'?: string;
    /**
     * External ID of this transaction, unique to the organization
     * @type {string}
     * @memberof TransactionsServiceTransferTransactionRequest
     */
    'externalId'?: string;
    /**
     * The maximum network fee to pay for this transaction in base asset units (eg ETH for Ethereum)
     * @type {string}
     * @memberof TransactionsServiceTransferTransactionRequest
     */
    'networkFee'?: string;
    /**
     * 
     * @type {V2XRPTransactionConfig}
     * @memberof TransactionsServiceTransferTransactionRequest
     */
    'config'?: V2XRPTransactionConfig;
    /**
     * Correlation ID for this transaction, used to correlate multiple actions
     * @type {string}
     * @memberof TransactionsServiceTransferTransactionRequest
     */
    'correlationId'?: string;
}

